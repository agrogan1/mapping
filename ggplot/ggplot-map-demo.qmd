---
title: "ggplot Map Demo"
subtitle: "A Demonstration of Making Maps with `ggplot`"
author: "Andy Grogan-Kaylor"
date: "today"
format:
  html:
    toc: true
    number-sections: true
    theme:
      light: united
      dark: vapor
---

```{css, echo=FALSE}

blockquote {
  color: black;
  border-left: 2px solid #FFCB05; 
  padding: 0.5em 10px;
}
  
```

# Call the libraries

```{r, message=FALSE}

library(ggplot2) # beautiful graphs

library(dplyr) # data wrangling

library(sf) # simple (spatial) features

library(readr) # import csv

```

# Use `read_sf` To Open Shapefiles

> Getting the directory and filename right is important.


```{r, eval=TRUE}

city_boundary <- read_sf("../shapefiles/AA_City_Boundary/AA_City_Boundary.shp")

buildings <- read_sf("../shapefiles/AA_Building_Footprints/AA_Building_Footprints.shp")

trees <- read_sf("../shapefiles/a2trees/AA_Trees.shp")

parks <- read_sf("../shapefiles/AA_Parks/AA_Parks.shp")

university <- read_sf("../shapefiles/AA_University/AA_University.shp")

WashtenawRoads <- read_sf("../shapefiles/Roads/RoadCenterlines.shp")

AnnArborRoads <- st_crop(WashtenawRoads, 
                         city_boundary) # crop to only get A2 roads

# watersheds <- read_sf("../shapefiles/watersheds/Watersheds.shp")

```

# Use `read_csv` to Read Text File with Client Data

```{r, eval=TRUE}

clients <- read_csv("../location-data/clients.csv")

```

# Only Clients in Ann Arbor Area

```{r, eval = TRUE}

clients <- clients %>% 
  filter(latitude <= 42.33 &
           latitude >= 42.22 &
           longitude >= -83.8 &
           longitude <= -83.65)

```

# Convert Clients to `sf` Object While Indicating *Coordinate Reference System* (CRS)

```{r, eval=TRUE}

# 4326 -> WGS1984

# point <- st_as_sf(clients,
#                   coords = c("longitude", "latitude"),
#                   crs = 4326)

# 4269 -> NAD1983 (A2 is NAD1983)

point <- st_as_sf(clients, 
                  coords = c("longitude", "latitude"), 
                  crs = 4269) 

```

# Use `ggplot` to Make The Map

> [full size map](social-service-agency.pdf)

```{r, eval = FALSE, echo = FALSE}

# NB RE Macs: the plotting device on Macs is actually pretty slow
# we notice this with all the detail that is involved in maps
# maps can be REALLY slow on Macs
# so--inconveniently--we write directly to PDF on a Mac
# and don't see the graph in our RStudio window
# we have to manually open the PDF to see the created map

# Apparently, the first layer is important for setting the CRS of the map

# pdf("./mapping/ggplot-map-test.pdf") # open PDF device (uncomment on Mac)

# dev.off() # turn off PDF device (uncomment on Mac)

```


```{r, eval = TRUE, fig.height=6}

ggplot(city_boundary) +
  # geom_sf(data = buildings,
  #         fill = "lightgrey") +
  geom_sf(data = AnnArborRoads, 
          color = "lightgrey") +
  geom_sf(color = "red", alpha = .5) +
  geom_sf(data = university, 
          fill = "blue", 
          alpha = .25) + 
  geom_sf(data = parks, 
          fill = "darkgreen", 
          alpha = .25) +
  geom_sf(data = point, 
          aes(color = program), 
          size = 5, 
          alpha = 1.0) +
  geom_sf(data = point, 
          size = 5, 
          pch = 21) + # 21 is outlines
  # geom_sf(data = trees, 
  #         size = .1,
  #         color = "darkgreen") +
  labs(title = "Ann Arbor",
       subtitle = "Locations of Clients",
       caption = "Simulated Social Service Agency Data") +
  scale_color_viridis_d() +
  scale_fill_viridis_d() +
  theme_minimal() +
  theme(plot.title = element_text(size = rel(2)), 
        axis.text = element_text(size = rel(.5)),
        legend.position = "bottom") 

```

# Save to Shareable Formats

```{r}

ggsave("social-service-agency.png", 
       height = 11, 
       width = 8.5)

ggsave("social-service-agency.pdf", 
       height = 11, 
       width = 8.5)

```





