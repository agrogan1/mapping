{
  "hash": "0b5bfeb1d24483cd3549598a25596ff1",
  "result": {
    "markdown": "---\ntitle: \"Making Maps With `ggplot` Using Location Data\"\n---\n\n\n## Call Libraries {#sec-location-data}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(readr) # read CSV\n\nlibrary(dplyr) # data wrangling\n\nlibrary(sf) # simple features\n\nlibrary(ggplot2) # maps\n```\n:::\n\n\n## Use `read_csv` to Read Text File with Client Data\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nclients <- read_csv(\"./location-data/clients.csv\")\n```\n:::\n\n\n## Only Clients in Ann Arbor Area\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nclients <- clients %>% \n  filter(latitude <= 42.33 &\n           latitude >= 42.22 &\n           longitude >= -83.8 &\n           longitude <= -83.65)\n```\n:::\n\n\n## Convert Clients to `sf` Object While Indicating *Coordinate Reference System* (CRS)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\npoint <- st_as_sf(clients, \n                  coords = c(\"longitude\", \"latitude\"), \n                  crs = 4269) # A2 is NAD1983\n\n# write to shapefile\n\nst_write(point, \n         \"./shapefiles/clients/clients.shp\",\n         append = FALSE) # replace; don't append\n```\n:::\n\n\n## Read in Shapefile(s)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ncity_boundary <- read_sf(\"./shapefiles/AA_City_Boundary/AA_City_Boundary.shp\")\n\nWashtenawRoads <- read_sf(\"./shapefiles/Roads/RoadCenterlines.shp\")\n\nAnnArborRoads <- st_crop(WashtenawRoads, \n                         city_boundary) # crop to only get A2 roads\n```\n:::\n\n\n## Map\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(city_boundary) +\n  geom_sf(alpha = .5) +\n  geom_sf(data = AnnArborRoads, \n          color = \"darkgrey\") +\n  geom_sf(data = point,\n          aes(color = program),\n          size = 3) +\nlabs(title = \"Ann Arbor\",\n     subtitle = \"Location of Program Clients\") +\n  scale_color_viridis_d() +\n  scale_fill_viridis_d() +\n  theme_minimal() +\n  theme(plot.title = element_text(size = rel(2)), \n        axis.text = element_text(size = rel(.5)),\n        legend.position = \"bottom\") \n```\n:::\n",
    "supporting": [
      "location-data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}