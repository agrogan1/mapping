---
title: "Mapping"
subtitle: "Materials for a GIS & Mapping Course In Development"
author: "Andy Grogan-Kaylor"
date: "today"
execute:
  echo: false
  message: false
format:
  html:
    toc: true
    number-sections: true
    theme:
      light: cosmo
      dark: vapor
---

```{r setup, include=FALSE}

knitr::opts_chunk$set(echo = FALSE)

```

```{css, eval=FALSE, echo=FALSE}

@import url('https://fonts.googleapis.com/css2?family=Cabin+Sketch&display=swap');

h1, h2, h3, p.subtitle {
  font-family: 'Cabin Sketch', cursive;;
}

```

```{r}
#| include: false

library(sf) # simple (spatial) features

library(leaflet) # beautiful maps

library(plotly) # interactive graphics

```

```{r}
#| label: fig-world
#| fig-cap: "Countries of the World"
#| fig-height: 3
#| warning: false
#| message: false

global_data <- read_sf("../mapping/shapefiles/wrld_simpl/wrld_simpl.shp")

  leaflet() %>%
    setView(0, 0, zoom = 1.5) %>%
    addProviderTiles(providers$Esri.WorldImagery) %>%
    addPolygons(data = global_data, 
                fillOpacity = .0, 
                weight = 2,
                color = "#009edb", 
                label = global_data$NAME,
                highlightOptions = highlightOptions(color = "red", 
                                                    weight = 2,
                                                    bringToFront = TRUE)) 

```

# Geographical and GIS Concepts

```{r, eval=FALSE}
#| label: fig-globe
#| fig-cap: "Orthographic (Globe) Projection"
#| column: margin

knitr::include_graphics("./orthographic-globe.png")

```

```{r}
#| label: fig-globe2
#| fig-cap: "Orthographic (Globe) Projection"
#| warning: false
#| column: margin
#| fig-height: 2

plot_geo() %>%
  layout(title = "", 
         geo = list(projection = list(type = 'orthographic'),
                    showland = TRUE,  
                    landcolor = toRGB("grey"),
                    showcountries = TRUE,
                    showocean = FALSE, 
                    oceancolor = "LightBlue",
                    lataxis = list(showgrid = TRUE,
                                   gridcolor = toRGB("black")),
                    lonaxis = list(showgrid = TRUE,
                                   gridcolor = toRGB("black"))))

```


* [latitude and longitude](./latitude-and-longitude/latitude-and-longitude.html)
* [map projections](./projections/projections.html)
* [coordinate reference systems (CRS)](./crs/crs.html)
* symbology

# GIS Data

* [shapefiles](./shapefiles/shapefiles.html)
    - see below for joining external data to shapefiles
* text files w/ latitude and longitude
* addresses ([geocoding](./geocoding/geocoding-demo.html))
* base layers
* KML

# R Libraries

```{r, eval=TRUE}
#| label: fig-ggplot
#| fig-cap: "ggplot Map of Simulated Clients"
#| fig-column: margin

knitr::include_graphics("./ggplot/social-service-agency.png")

```

::: {.column-margin}
[[full size `ggplot` map](./ggplot/social-service-agency.pdf)]
:::

```{r, eval=TRUE}
#| label: fig-leaflet
#| fig-cap: "Leaflet Map of Simulated Clients"
#| fig-column: margin

knitr::include_graphics("./leafletmap.png")

```

::: {.column-margin}
[[`leaflet` demo](./leaflet/leaflet-map-demo.html)]
:::

* `maps`
* [`ggplot`](./ggplot/ggplot-map-demo.html)  ([full size map](./ggplot/social-service-agency.pdf)) 
    - [joining external data to shapefiles and mapping with ggplot](./ggplot-merge-with-external-data/ggplot-merge-with-external-data.html)
* `plotly`
* [`leaflet`](./leaflet/leaflet-map-demo.html) 
* `sf`
* `tidycensus`
* `mapboxapi`

# More Advanced Concepts

* [geocoding](./geocoding/geocoding-demo.html)
* geoprocessing
    + selection
    + spatial joins
    
# Other Software

* QGIS
* ArcGIS
* Tableau


